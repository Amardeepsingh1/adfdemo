{
	"name": "File_Validation",
	"properties": {
		"description": "validates files then accepts or rejects them",
		"activities": [
			{
				"name": "Duplicate File CHeck",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[fv_duplicate_file_chec]",
						"storedProcedureParameters": {
							"pfile_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.pFileName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "ds_light_Pull_Master",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Duplicate File CHeck",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Duplicate File CHeck').output.firstRow.a,'not exists')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Update to failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[fv_insert_Update_Tracking]",
								"storedProcedureParameters": {
									"pBatchid": {
										"value": {
											"value": "@pipeline().parameters.pBatchId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pFileName": {
										"value": {
											"value": "@pipeline().parameters.pFileName",
											"type": "Expression"
										},
										"type": "String"
									},
									"pReason": {
										"value": "File with same name already processed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_light",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "File_name_check",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[fv_filename_validation]",
					"storedProcedureParameters": {
						"BHID": {
							"value": {
								"value": "@pipeline().parameters.pBatchId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"var": {
							"value": {
								"value": "@pipeline().parameters.pFileName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_light",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get_column_count",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "File_name_check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_fv_stagingFolderFile",
						"type": "DatasetReference",
						"parameters": {
							"ds_p_fileName": {
								"value": "@pipeline().parameters.pFileName",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"columnCount",
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings"
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Get_column_count",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GetColNamesFromDatabase",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "File_Structure_Validation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"pInvokedFileStructure": {
							"value": "@activity('Get_column_count').output.structure",
							"type": "Expression"
						},
						"pInvokedFileColCount": {
							"value": "@activity('Get_column_count').output.columnCount",
							"type": "Expression"
						},
						"pInvokedFileName": {
							"value": "@pipeline().parameters.pFileName",
							"type": "Expression"
						},
						"pDatabaseStructure": {
							"value": "@activity('GetColNamesFromDatabase').output.value",
							"type": "Expression"
						},
						"pBHID": {
							"value": "@pipeline().parameters.pBatchId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "GetColNamesFromDatabase",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select columnname from FV_name_check where source_identified='sr' ",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "ds_light_Pull_Master",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"pFileName": {
				"type": "string",
				"defaultValue": "abc"
			},
			"pBatchId": {
				"type": "string",
				"defaultValue": "23"
			}
		},
		"annotations": []
	}
}